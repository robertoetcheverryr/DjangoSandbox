version: '3.7'
# Remember that the network MUST exist in the docker host/swarm
networks:
  backbone:
    external:
      name: backbone
services:
# TODO I am thinking of making all nginx instances share /var/log and use a name+log.log format
# TODO move from custom nginx image to the base image + changing the files during startup
  nginx-static:
    image: etcheverryroberto/nginx-static:latest
    expose:
      - "80"
    networks:
      - backbone
    #volumes:
      # TODO check how to send these volumes and make them available to all containers and nodes
      #- ./static:/usr/share/nginx/static
      #- ./var/log/nginx/:/var/log/nginx/
      #- ./nginx-static/etc/nginx/:/etc/nginx/
    logging:
      driver: syslog
      options:
        syslog-address: "udp://logs4.papertrailapp.com:36048"
        tag: "{{.Name}}/{{.ID}}"
# This is the only container ready
  djangosandbox:
    image: etcheverryroberto/djangosandbox:latest
    expose:
      - "8000"
    networks:
      - backbone
    logging:
      driver: syslog
      options:
        syslog-address: "udp://logs4.papertrailapp.com:36048"
        tag: "{{.Name}}/{{.ID}}"
# TODO configure certbot to obtain base and wildcard certs for dynu using DNS-01 challenge
  #certbot:
  #  image: certbot/certbot
    # --must-staple --rsa-key-size 4096
# TODO with the above cert generated, configure nginx to serve static and dynamic content
  nginx-ssl-load-balancer:
    depends_on:
      - nginx-static
      - djangosandbox
    image: etcheverryroberto/nginx-ssl-load-balancer:latest
    ports:
      - "80:80"
      - "443:443"
    networks:
      - backbone
    logging:
      driver: syslog
      options:
        syslog-address: "udp://logs4.papertrailapp.com:36048"
        tag: "{{.Name}}/{{.ID}}"
    #volumes:
      # TODO check how to send these volumes and make them available to all containers and nodes
      #- ./var/log/nginx/:/var/log/nginx/
      #- ./nginx-ssl-load-balancer/etc/nginx/:/etc/nginx/