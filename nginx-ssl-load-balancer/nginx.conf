user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

http {

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        # server_tokens off;
        client_body_temp_path /var/cache 1 2;
        proxy_temp_path /var/cache 1 2;
        fastcgi_temp_path /var/cache 1 2;
        uwsgi_temp_path /var/cache 1 2;
        scgi_temp_path /var/cache 1 2;
        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/ssl-load-balancer-access.log;
        error_log /var/log/nginx/ssl-load-balancer-error.log;

        ##
        # Gzip Settings
        ##

        gzip on;

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        ##
        # Virtual Host Configs
        ##

        # Listen on HTTP to auto redirect to HTTPS
        server {
            listen 8080 default_server;

            server_name _;

            return 301 https://$host$request_uri;
        }
        server {
            listen 4443 ssl;
            server_name test.infrastructure-altrium.mywire.org;

            # Specify our certificates, these come from the shared volume
            ssl_certificate /etc/nginx/ssl/test.infrastructure-altrium.mywire.org.crt;
            ssl_certificate_key /etc/nginx/ssl/test.infrastructure-altrium.mywire.org.key;
            # Configure TLSv1.2 and TLSv1.3 ciphers and options
            ssl_ciphers "TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
            ssl_ecdh_curve secp384r1:X25519:prime256v1;
            ssl_protocols TLSv1.3 TLSv1.2;
            ssl_prefer_server_ciphers off;
            # Configure ssl session cache, timeout and disable tickets
            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 10m;
            ssl_session_tickets off;
            # OCSP stapling
            ssl_stapling on; # Requires nginx >= 1.3.7
            ssl_stapling_verify on; # Requires nginx => 1.3.7
            # HSTS (ngx_http_headers_module is required) (63072000 seconds)
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;
            # Configure DNS resolver
            resolver 8.8.4.4 8.8.8.8 valid=300s;
            resolver_timeout 5s;

            location /static {
                proxy_set_header X-Forwarded-Host $server_name;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://nginx-static:8080;
            }

            location / {
                proxy_set_header X-Forwarded-Host $server_name;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://djangosandbox:8000;
            }
        }
}
